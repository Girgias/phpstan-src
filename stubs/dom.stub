<?php

class DOMDocument extends DOMNode
{

	/** @var DOMDocumentType|null */
	public $doctype;

	/** @var DOMElement|null */
	public $documentElement;

	/** @var null */
	public $ownerDocument;

	/**
	 * @param string $name
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagName ($name) {}

	/**
	 * @param string $namespaceURI
	 * @param string $localName
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagNameNS ($namespaceURI, $localName) {}

}

class DOMNode
{
	/**
	 * @readonly
	 * @var DOMNamedNodeMap<DOMAttr>|null
	 */
	public $attributes;

	/**
	 * @phpstan-assert-if-true DOMNamedNodeMap<DOMAttr> $this->attributes
	 * @phpstan-assert-if-false null $this->attributes
	 */
	public function hasAttributes(): bool {}
}

class DOMElement extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

	/**
	 * @param string $name
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagName ($name) {}

	/**
	 * @param string $namespaceURI
	 * @param string $localName
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagNameNS ($namespaceURI, $localName) {}

}

/**
 * @template-covariant TNode as DOMNode
 * @implements Traversable<int, TNode>
 * @implements IteratorAggregate<int, TNode>
 */
class DOMNodeList implements Traversable, IteratorAggregate, Countable
{

	/**
	 * @param int $index
	 * @return TNode|null
	 */
	public function item ($index) {}

}

class DOMXPath
{

    /**
     * @param string $expression
     * @param DOMNode|null $contextNode
     * @param boolean $registerNodeNS
     * @return DOMNodeList<DOMNode>|false
     */
    public function query($expression, $contextNode, $registerNodeNS) {}

}

class DOMAttr extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMCharacterData extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMDocumentType extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMEntity extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMNotation extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMProcessingInstruction extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

	/**
	 * @var string
	 */
	public $target;

	/**
	 * @var string
	 */
	public $data;

}

/**
 * @template-covariant TNode as DOMNode
 * @implements Traversable<string, TNode>
 * @implements IteratorAggregate<int, TNode>
 * @property-read int $length
 */
class DOMNamedNodeMap implements Traversable, IteratorAggregate, Countable
{

    /**
     * @return (TNode | null)
     */
    public function getNamedItem(string $qualifiedName)
    {
    }
    /**
     * @return (TNode | null)
     */
    public function getNamedItemNS(?string $namespace, string $localName)
    {
    }
    /**
     * @return (TNode | null)
     */
    public function item(int $index)
    {
    }
}

class DOMText extends DOMCharacterData
{

	/** @var string */
	public $wholeText;

}
